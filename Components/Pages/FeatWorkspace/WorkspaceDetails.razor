@page "/workspace/{WorkspaceId}/overview"
@using KonnClient.Components.Pages.FeatContact
@using KonnClient.Data
@using KonnClient.Data.Models
@using static KonnClient.Components.Shared.KonnTabs
@rendermode InteractiveServer

<PageTitle>@Workspace?.Name</PageTitle>

<div class="flex flex-col gap-y-[32px] w-full pb-[80px]">
    <div class="w-full flex flex-col items-center border-b border-border pt-[20px] space-y-[32px] bg-gradient-to-b from-[#2874fe20] via-[#28fefb07] to-transparent pt-[80px]">
        <div class="space-y-[24px] max-w-[800px] w-full">
            <div class="space-y-[8px]">
                <h1 class="text-[36px] font-semibold">@Workspace?.Name</h1>
                <span class="text-sText/40 font-medium">@Workspace?.Description</span>
            </div>
        </div>

        <div class="flex w-full max-w-[800px] space-x-[20px]">
            <KonnTabs SelectedTab="@SelectedTab" TabOptions="@TabOptions" OnTabSelected="HandleTabSelected" />
        </div>
    </div>

    <div class="flex w-full gap-y-[32px] flex flex-col items-center">
        <div class="space-y-[24px] max-w-[800px] w-full">
            <ContactsRecentList WorkspaceId="@WorkspaceId" />

            <div class="h-[1px] bg-border w-full max-w-[800px]" />

            <div class="flex w-full space-x-[20px] flex flex-col items-center">
                <ContactsList WorkspaceId="@WorkspaceId" />
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string WorkspaceId { get; set; } = string.Empty;

    public string SelectedTab { get; set; } = "overview";

    public Workspace? Workspace { get; set; }

    public List<TabModel> TabOptions { get; set; } = new List<TabModel>
    {
        new TabModel { Label = "Overview", Value = "overview" },
        new TabModel { Label = "Categories", Value = "categories" },
        new TabModel { Label = "Trash", Value = "trash" },
        new TabModel { Label = "Settings", Value = "settings" }
    };

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(WorkspaceId))
        {
            throw new Exception("WorkspaceId is null or empty");
        }

        if (int.TryParse(WorkspaceId, out int workspaceIdInt))
        {
            Workspace = MockDataService.Workspaces.FirstOrDefault(w => w.Id == workspaceIdInt);
        }
    }

    private void HandleTabSelected(string selectedTab)
    {
        SelectedTab = selectedTab;
    }
}
