// <auto-generated />
using System;
using KonnClient.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KonnClient.Migrations
{
    [DbContext(typeof(KonnDbContext))]
    partial class KonnDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KonnClient.Data.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactId = 1,
                            CreatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5969),
                            FullName = "University of San Carlos Talamban, Cebu",
                            IsDefault = true
                        },
                        new
                        {
                            Id = 2,
                            ContactId = 1,
                            CreatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5971),
                            FullName = "Liloan, Cebu",
                            IsDefault = true
                        },
                        new
                        {
                            Id = 3,
                            ContactId = 1,
                            CreatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5973),
                            FullName = "Villa Marina, Lapu-Lapu City",
                            IsDefault = true
                        },
                        new
                        {
                            Id = 4,
                            ContactId = 2,
                            CreatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5975),
                            FullName = "Guinacot, Danao, Cebu",
                            IsDefault = true
                        });
                });

            modelBuilder.Entity("KonnClient.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkspaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#60abe3",
                            CreatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5895),
                            Description = "My own personal important contacts",
                            IsDeleted = false,
                            Name = "Important",
                            UpdatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5895),
                            WorkspaceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Color = "#60abe3",
                            CreatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5899),
                            Description = "My own personal important contacts",
                            IsDeleted = false,
                            Name = "Emergency",
                            UpdatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5899),
                            WorkspaceId = 1
                        });
                });

            modelBuilder.Entity("KonnClient.Data.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmergency")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastOpenedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pronounciation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkspaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5935),
                            Email = "john.doe@example.com",
                            Image = "",
                            IsBlocked = false,
                            IsDeleted = false,
                            IsEmergency = false,
                            IsFavorite = true,
                            Name = "John Doe",
                            Notes = "Important contact",
                            Phone = "123-456-7890",
                            Pronounciation = "John Doe",
                            Telephone = "123-456-7890",
                            UpdatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5936),
                            WorkspaceId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5941),
                            Email = "ben.affleck@example.com",
                            Image = "",
                            IsBlocked = false,
                            IsDeleted = false,
                            IsEmergency = false,
                            IsFavorite = true,
                            Name = "Ben Affleck",
                            Notes = "Important contact",
                            Phone = "123-456-7890",
                            Pronounciation = "Ben Affleck",
                            Telephone = "123-456-7890",
                            UpdatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5941),
                            WorkspaceId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5945),
                            Email = "hosea@example.com",
                            Image = "",
                            IsBlocked = false,
                            IsDeleted = false,
                            IsEmergency = false,
                            IsFavorite = true,
                            Name = "Hosea Mendez Barriga",
                            Notes = "Important contact",
                            Phone = "123-456-7890",
                            Pronounciation = "Hosea Mendez Barriga",
                            Telephone = "123-456-7890",
                            UpdatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5945),
                            WorkspaceId = 1
                        });
                });

            modelBuilder.Entity("KonnClient.Data.Models.ContactCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ContactId");

                    b.ToTable("ContactCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ContactId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            ContactId = 2
                        });
                });

            modelBuilder.Entity("KonnClient.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5652),
                            Email = "john.doe@example.com",
                            Image = "",
                            IsDeleted = false,
                            Name = "John Doe",
                            UpdatedAt = new DateTime(2024, 7, 30, 18, 9, 43, 188, DateTimeKind.Local).AddTicks(5653)
                        });
                });

            modelBuilder.Entity("KonnClient.Data.Models.Workspace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Workspaces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is the first workspace.",
                            Image = "https://example.com/image1.jpg",
                            IsDeleted = false,
                            Name = "Workspace Alpha",
                            UpdatedAt = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is the second workspace.",
                            Image = "https://example.com/image2.jpg",
                            IsDeleted = false,
                            Name = "Workspace Beta",
                            UpdatedAt = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is the third workspace.",
                            Image = "https://example.com/image3.jpg",
                            IsDeleted = true,
                            Name = "Workspace Gamma",
                            UpdatedAt = new DateTime(2023, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is the fourth workspace.",
                            Image = "https://example.com/image4.jpg",
                            IsDeleted = false,
                            Name = "Workspace Delta",
                            UpdatedAt = new DateTime(2023, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is the fifth workspace.",
                            Image = "https://example.com/image5.jpg",
                            IsDeleted = false,
                            Name = "Workspace Epsilon",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("KonnClient.Data.Models.Address", b =>
                {
                    b.HasOne("KonnClient.Data.Models.Contact", "Contact")
                        .WithMany("Addresses")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("KonnClient.Data.Models.Category", b =>
                {
                    b.HasOne("KonnClient.Data.Models.Workspace", "Workspace")
                        .WithMany("Categories")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("KonnClient.Data.Models.Contact", b =>
                {
                    b.HasOne("KonnClient.Data.Models.Workspace", "Workspace")
                        .WithMany("Contacts")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("KonnClient.Data.Models.ContactCategory", b =>
                {
                    b.HasOne("KonnClient.Data.Models.Category", "Category")
                        .WithMany("ContactCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KonnClient.Data.Models.Contact", "Contact")
                        .WithMany("ContactCategories")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("KonnClient.Data.Models.Workspace", b =>
                {
                    b.HasOne("KonnClient.Data.Models.User", "User")
                        .WithMany("Workspaces")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KonnClient.Data.Models.Category", b =>
                {
                    b.Navigation("ContactCategories");
                });

            modelBuilder.Entity("KonnClient.Data.Models.Contact", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("ContactCategories");
                });

            modelBuilder.Entity("KonnClient.Data.Models.User", b =>
                {
                    b.Navigation("Workspaces");
                });

            modelBuilder.Entity("KonnClient.Data.Models.Workspace", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
